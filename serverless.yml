# NOTE: update this with your service name
service: memeup

# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  environment:
    tableUsers: users
    tableMemes: memes
    tableChats: chats
    tableReportMemes: reportmemes
    tableConnectionId: connectionId
    tableMessages: messages
    tableConversations: conversations
    tableUnMatches: unmatchusers
    tableLikes: likes
    domainName: sa8xdq5xmf.execute-api.us-east-1.amazonaws.com
    stage: dev
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 
        - "arn:aws:dynamodb:us-east-1:*:*"
        - "arn:aws:dynamodb:us-east-1:496442284755:table/messages"
        - "arn:aws:dynamodb:us-east-1:496442284755:table/messages/*"
        - "arn:aws:dynamodb:us-east-1:496442284755:table/conversations"
        - "arn:aws:dynamodb:us-east-1:496442284755:table/conversations/*"
        - "arn:aws:dynamodb:us-east-1:496442284755:table/likes"
        - "arn:aws:dynamodb:us-east-1:496442284755:table/likes/*"

resources:
  - ${file(resources/api-gateway-errors.yml)}

functions:
  createUser:
    handler: src/controllers/users/createUser.main
    events:
      - http:
          path: createUser
          method: post
          cors: true
          authorizer: aws_iam
  activateUserAccount: 
    handler: src/controllers/users/activateUserAccount.main
    events:
      - http:
          path: activateUserAccount
          method: put
          cors: true
          authorizer: aws_iam
  getUserData:
    handler: src/controllers/users/getUserData.main
    events:
      - http:
          path: getUserData
          method: get
          cors: true
          authorizer: aws_iam
  getUserById:
    handler: src/controllers/users/getUserById.main
    events:
      - http:
          path: getUserById/{id}
          method: get
          cors: true
          authorizer: aws_iam
  getMatchSuggestion:
    handler: src/controllers/users/getMatchSuggestion.main
    events:
      - http:
          path: getMatchSuggestion
          method: get
          cors: true
          authorizer: aws_iam
  updateUserData:
    handler: src/controllers/users/updateUserData.main
    events:
      - http:
          path: updateUserData
          method: put
          cors: true
          authorizer: aws_iam
  reportMeme:
      handler: src/controllers/memes/reportMemes.main
      events:
        - http:
            path: reportmeme
            method: post
            cors: true
            authorizer: aws_iam
  likeMeme:
      handler: src/controllers/memes/likeMemes.main
      events:
        - http:
            path: likeMeme
            method: post
            cors: true
            authorizer: aws_iam
  unlikeMeme:
    handler: src/controllers/memes/unlikeMemes.main
    events:
      - http:
          path: unlikeMeme/{id}
          method: delete
          cors: true
          authorizer: aws_iam
  fetchMeme:
    handler: src/controllers/memes/fetchMemes.main
    events:
      - http:
          path: fetchMeme/{id}
          method: get
          cors: true
          authorizer: aws_iam
  getChatRooms:
    handler: src/controllers/chats/getChatRooms.main
    events:
      - http:
          path: getChatRooms
          method: get
          cors: true
          authorizer: aws_iam
  unMatchUsers:
    handler: src/controllers/chats/unMatchUsers.main
    events:
      - http:
          path: unMatchUsers
          method: post
          cors: true
          authorizer: aws_iam
  likeUser:
    handler: src/controllers/chats/likeUser.main
    events:
      - http:
          path: likeUser
          method: post
          cors: true
          authorizer: aws_iam